package util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class DBUtil {
	private final String URL = "jdbc:oracle:thin:@localhost:1521:xe";
	private final String USER = "scott";
	private final String PASSWORD = "tiger";

	private Connection conn;
	private PreparedStatement psmt;
	private ResultSet rs;

	// JDBC 드라이버 로드
	public DBUtil() {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			System.out.println("⚠ 드라이버 로딩 실패");
			e.printStackTrace();
		}
	}

	// DB 연결 메서드
	public void connect() {
		try {
			conn = DriverManager.getConnection(URL, USER, PASSWORD);
		} catch (SQLException e) {
			System.out.println("⚠ DB 연결 실패");
			e.printStackTrace();
		}
	}

	public Connection getConnection() {
		return conn;
	}

	// 기본 PreparedStatement 반환
	public PreparedStatement getPreparedStatement(String sql) throws SQLException {
		if (conn == null || conn.isClosed()) {
			connect(); // 연결이 끊겼다면 재연결
		}
		psmt = conn.prepareStatement(sql);
		return psmt;
	}

	// 자동 생성 키 반환 가능한 PreparedStatement 오버로드 메서드
	public PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws SQLException {
		if (conn == null || conn.isClosed()) {
			connect();
		}
		psmt = conn.prepareStatement(sql, autoGeneratedKeys);
		return psmt;
	}

	public ResultSet getResultSet() {
		return rs;
	}

	// 자원 해제
	public void disConnect() {
		try {
			if (rs != null)
				rs.close();
			if (psmt != null)
				psmt.close();
			if (conn != null)
				conn.close();
		} catch (SQLException e) {
			System.out.println("⚠ 자원 해제 중 오류");
			e.printStackTrace();
		}
	}
}
